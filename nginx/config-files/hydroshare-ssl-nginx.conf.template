# hydroshare-ssl-nginx.conf
#
# This is the configuration for the active Nginx server that interacts with Django and iRODs.
# It should be named /home/hydro/hydroshare/nginx/config-files/hydroshare-ssl-nginx.conf
# This contains the django interface but request chokes are now implemented on the
# outer (downstream) switch server that chooses hydroshare instances.

# $external is 1 if the URI is external and 0 if it cannot possibly be
# external due to use of RFC-1918 addressing. This avoids redirects
# to canonical naming when a request comes from inside hydroshare

geo $external {
  default 1;
  192.168.0.0/16 0;
  172.16.0.0/12 0;
  127.0.0.0/8 0;
  10.0.0.0/8 0;
  152.54.0.0/20 0;
}

proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;

client_max_body_size 4096m;
client_body_buffer_size 1m;
proxy_intercept_errors on;
proxy_buffering off;
proxy_buffer_size 128k;
proxy_buffers 256 16k;
proxy_busy_buffers_size 256k;
proxy_temp_file_write_size 256k;
proxy_max_temp_file_size 0;
proxy_connect_timeout 300s;
proxy_read_timeout 300;

server {
    listen          80;
    server_name     FQDN_OR_IP;

    # bypass https for internal monitoring 
    location /whatzupdoc-inner { 
        if ($external) { 
            return 404; 
        } 
        stub_status; 
    } 

    location / { 
        # This should not rewrite hostname!
        # rewrite ^/(.*)  https://FQDN_OR_IP/$1 permanent;
        # This syntax is considered more efficient in nginx documentation
        # and does the same thing as the above:
        return 301 https://$http_host/$request_uri;
    } 
}

server {
    listen          443 ssl;
    server_name     FQDN_OR_IP;
    root            /hydroshare/hydroshare/static/;

    # Compute whether we need to rewrite an address. Rewrite all erronious
    # external addresses but avoid rewriting internal references (from django
    # management commands).

    set $need_rewrite 0;

    if ($http_host != "FQDN_OR_IP") {
        set $need_rewrite 1;
    }

    if ($external) {
        set $need_rewrite "${need_rewrite}1";
    }

    if ($need_rewrite = 11) {
        return 301 https://FQDN_OR_IP$request_uri;
    }

    sendfile on;
    sendfile_max_chunk 512k;
    directio 4m;  
    directio_alignment 512; 
    aio threads;

    access_log      /var/log/nginx/access.log combined;
    error_log       /var/log/nginx/error.log error;
    # This clutters logs without usefulness 2021/06/21 ALC
    # error_log       /var/log/nginx/system.log notice;
    # Uncomment the following line to generate debugging log entries
    error_log       /var/log/nginx/system.log debug;

    charset         utf-8;
    client_max_body_size 4096m;

    ssl_certificate         /hs-certs/SSL_CERT_FILE;
    ssl_certificate_key     /hs-certs/SSL_KEY_FILE;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # Enable OCSP stapling which allows clients to verify that our certificate
    # is not revoked without contacting the Certificate Authority by appending a
    # CA-signed promise, that it's still valid, to the TLS handshake response.
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:5m;
    ssl_session_tickets off;

    location /static/ {
        alias /hydroshare/hydroshare/static/;
    }

    location /media/ {
        alias /hydroshare/hydroshare/static/media/;
    }

    # These entry points enable large file download via NGINX directly. 
    # Access is validated via Django reverse proxy first. 
    # To work, these must be exposed on the NGINX host 
    # and the NGINX worker must have read permission. 

    location /IRODS_DATA_URI/ {
        internal;
        alias IRODS_DATA_ROOT/;
    }

    location /IRODS_USER_URI/ {
        internal;
        alias IRODS_USER_ROOT/;
    }

    location /IRODS_CACHE_URI/ {
        internal;
        alias IRODS_CACHE_ROOT/;
    }

    location /django_irods/download/ {
        if (-f $document_root/maintenance_on.html) {
            return 503;
        }
        proxy_pass http://unix:/hs_tmp/gunicorn.sock;
        proxy_set_header X-Django-Reverse-Proxy true;
    }

    # large file upload theory of operation: 
    # 1. Receive connection at /hs_upload/uppy with file location pattern. 
    # 2. Django validates the connection and access control. 
    # 3. Django redirects to /upload/, which invokes tusd. 
    # 4. Tus js client calls /hs_upload/complete/ to complete the upload. 

    # perform the upload by calling tusd. 
    location /upload/ {
        proxy_pass http://tusd:1080;
        # how to use unix socket instead: 
        # proxy_pass http://unix:/tusd_tmp/tusd.sock;
         
        # Disable request and response buffering
        proxy_request_buffering  off;
        proxy_buffering          off;
        proxy_http_version       1.1;
        
        # Add X-Forwarded-* headers
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        client_max_body_size     0;
    } 

    # catch misdirected /connect/ and send to /companion/connect/
    location /connect/ { 
        proxy_pass http://uppy:3020/connect/;
        # Disable request and response buffering
        proxy_request_buffering  off;
        proxy_buffering          off;
        proxy_http_version       1.1;
        
        # Add X-Forwarded-* headers
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        client_max_body_size     0;
    }

    location /companion/ {
        proxy_pass http://uppy:3020/;

        # Disable request and response buffering
        proxy_request_buffering  off;
        proxy_buffering          off;
        proxy_http_version       1.1;
        
        # Add X-Forwarded-* headers
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host; 

        client_max_body_size     0;
    }

    # default response if no patterns above are matched. 
    location / {
        if (-f $document_root/maintenance_on.html) {
            return 503;
        }
        # This curious directive allows admin static files to be referenced
        # as /admin/* rather than /static/admin/*, and mezzanine static files to
        # be referenced as /mezzanine/* rather than /static/mezzanine/*.
        try_files $uri @proxy;
    }

    location @proxy {
        proxy_pass http://unix:/hs_tmp/gunicorn.sock;
    }

    error_page 503 @maintenance;
    location @maintenance {
        rewrite ^(.*)$ /maintenance_on.html break;
    }
}

### DELETED ###server {
### DELETED ###    listen          443 ssl;
### DELETED ###    server_name     FQDN_UPLOAD;
### DELETED ###    root            /hydroshare/hydroshare/static/;
### DELETED ###
### DELETED ###    access_log      /var/log/nginx/access.log combined;
### DELETED ###    error_log       /var/log/nginx/error.log error;
### DELETED ###    # This clutters logs without usefulness 2021/06/21 ALC
### DELETED ###    # error_log       /var/log/nginx/system.log notice;
### DELETED ###    # Uncomment the following line to generate debugging log entries
### DELETED ###    error_log       /var/log/nginx/system.log debug;
### DELETED ###
### DELETED ###    charset         utf-8;
### DELETED ###    client_max_body_size 4096m;
### DELETED ###
### DELETED ###    ssl_certificate         /hs-certs/SSL_CERT_FILE;
### DELETED ###    ssl_certificate_key     /hs-certs/SSL_KEY_FILE;
### DELETED ###
### DELETED ###    # large file upload theory of operation: 
### DELETED ###    # 1. Receive connection at /hs_upload/uppy with file location pattern. 
### DELETED ###    # 2. Django validates the connection and access control. 
### DELETED ###    # 3. Django redirects to /upload/, which invokes tusd. 
### DELETED ###    # 4. Tus js client calls /hs_upload/complete/ to complete the upload. 
### DELETED ###
### DELETED ###    # perform the upload by calling tusd. 
### DELETED ###    location / {
### DELETED ###        # CORS header
### DELETED ###        if ($request_method = OPTIONS ) {
### DELETED ###            add_header "Access-Control-Allow-Origin"  "https://cuahsi-dev-1.hydroshare.org";
### DELETED ###            add_header "Access-Control-Allow-Methods" *;
### DELETED ###            add_header "Access-Control-Allow-Headers" *;
### DELETED ###            add_header "Access-Control-Expose-Headers" *;
### DELETED ###            return 200;
### DELETED ###        }
### DELETED ###        
### DELETED ###        if ($request_method ~* "(GET|POST|HEAD|PATCH|DELETE)") {
### DELETED ###            add_header "Access-Control-Expose-Headers" *;
### DELETED ###            add_header "Access-Control-Allow-Origin"  "https://cuahsi-dev-1.hydroshare.org";
### DELETED ###        }       
### DELETED ###
### DELETED ###        proxy_pass http://tusd:1080;
### DELETED ###        # use unix socket instead: 
### DELETED ###        # proxy_pass http://unix:/tusd_tmp/tusd.sock;
### DELETED ###         
### DELETED ###        # Disable request and response buffering
### DELETED ###        proxy_request_buffering  off;
### DELETED ###        proxy_buffering          off;
### DELETED ###        proxy_http_version       1.1;
### DELETED ###        
### DELETED ###        # Add X-Forwarded-* headers
### DELETED ###        proxy_set_header X-Forwarded-Host $host;
### DELETED ###        proxy_set_header X-Forwarded-Proto $scheme;
### DELETED ###        proxy_set_header Upgrade $http_upgrade;
### DELETED ###        proxy_set_header Connection "upgrade";
### DELETED ###         
### DELETED ###
### DELETED ###        client_max_body_size     0;
### DELETED ###    } 
### DELETED ###}
